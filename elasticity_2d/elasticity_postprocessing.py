import numpy as npimport os, sysfrom pathlib import Path# add utilies to the system pathpath_utils = str(Path(__file__).parent.parent.absolute()) + "/utils"sys.path.append(path_utils)from elasticity_utils import stress_plane_strainfrom exportVtk import meshGeometry, solutionFieldOnMeshToVtkdef postProcess(model):    '''    Performs elasticity specific post-processing of a trained model.     Parameters    ----------    X : trained deepxde model    '''    geom = model.data.geom        X, triangles = meshGeometry(geom, numberOfPointsOnBoundary=10)        displacement = model.predict(X)    sigma_xx, sigma_yy, sigma_xy = model.predict(X, operator=stress_plane_strain)        combined_disp = tuple(np.vstack((np.array(displacement[:,0].tolist()),np.array(displacement[:,1].tolist()),np.zeros(displacement[:,0].shape[0]))))    combined_stress = tuple(np.vstack((np.array(sigma_xx.flatten().tolist()),np.array(sigma_yy.flatten().tolist()),np.array(sigma_xy.flatten().tolist()))))        pointData = { "displacement" : combined_disp, "stress" : combined_stress}    file_path = os.path.join(os.getcwd(),"Rectangle_body_force_problem")        solutionFieldOnMeshToVtk(X, triangles, pointData, file_path)